*.yuzui {
  --shadow: var(--shadow-size, 4px);

  --panel-color: hsl(var(--yuzui-panel, var(--yuzui-primary)));
  --panel: var(--panel-color, currentColor);

  --background-color: hsl(var(--yuzui-light));
  --text-color: hsl(var(--yuzui-primary));

  &:not(.does-not-exist) {
    background-color: var(--background-color, transparent);
    color: var(--text-color, currentColor);
    border: 1px solid var(--panel);
  }

  transform: translate3d(calc(-1 * var(--shadow)), calc(-1 * var(--shadow)), 0);
  box-shadow: var(--shadow) var(--shadow) var(--panel);

  &:is(button, a, .button):active,
  &:is(.pressed, .loading) {
    box-shadow: 0px 0px var(--panel);
    transform: translate3d(0, 0, 0);
    opacity: 100%;
  }

  &:is(.pressed, .loading) {
    pointer-events: none;
  }
}

:is(button, a, .button).yuzui {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  appearance: none;

  position: relative;

  -webkit-transition-property: box-shadow, transform;
  -webkit-transition-timing-function: linear;
  -webkit-transition-duration: 75ms;
  transition-property: box-shadow, transform;
  transition-timing-function: linear;
  transition-duration: 75ms;

  cursor: pointer;
  opacity: 100%;

  &:focus-visible {
    color: hsl(var(--yuzui-accent, 217 82% 50%));
    outline: none;
  }

  &:not(:has(div)) {
    text-decoration: none;
    font-size: 16px;
    font-weight: 500;
    padding: 6px 32px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &:disabled {
    color: hsl(var(--yuzui-primary) / 0.5);
    pointer-events: none;
    cursor: not-allowed;
  }

  &.loading::after {
    position: absolute;
    right: 6px;
    animation: spin 1s linear infinite;
    display: inline-block;
    border-radius: 100%;
    border: 2px solid currentColor;
    border-top-color: transparent;
    height: 12px;
    width: 12px;
    content: "";
  }
}

.yuzui > :is(input, textarea):only-child {
  color: var(--text-color, currentColor);
  background: none !important;
  border: none !important;
  outline: none !important;
  width: 100%;
  padding: 6px;
  display: inline-block;
}

.yuzui-column {
  display: flex;
  flex-direction: column;

  & > *:not(:first-child) {
    margin-top: -1px;
  }
}

.yuzui-column:has(:is(button, a, .button).yuzui) ~ * {
  z-index: 1;
}

.yuzui.yuzui-column:has(> .yuzui) {
  overflow-y: auto;
  overflow-x: hidden;
  background-color: var(--text-color, currentColor);

  & > :first-child {
    border-top: 0;
  }

  & > :last-child {
    border-bottom: 0;
  }
}

.yuzui.yuzui-column > .yuzui {
  border-left: 0;
  border-right: 0;
  transform: translate3d(0, 0, 0) !important;

  &:is(button, a, .button):is(:active, .pressed, .loading) {
    transform: translate3d(var(--shadow), var(--shadow), 0) !important;
  }
}

.yuzui.yuzui-column::after {
  content: "";
  border-top: 1px solid var(--panel);
  background-color: var(--background-color, transparent);
  flex-grow: 1;
  width: 100%;
  z-index: 1;
}

.yuzui-row:has(:is(button, a, .button).yuzui) ~ * {
  z-index: 1;
}

.yuzui-row {
  display: flex;

  & > *:not(:last-child) {
    margin-right: -1px;
  }

  & > :is(button, a, .button).yuzui ~ * {
    z-index: 1;
  }

  & + .yuzui-row {
    margin-top: -1px;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
